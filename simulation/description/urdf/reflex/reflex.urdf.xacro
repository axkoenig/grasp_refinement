<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="reflex">

  <xacro:arg name="actuate_reflex" default="true"/>
  <xacro:arg name="use_reflex_contact_sensors" default="true"/>

  <!-- Switch joint type for actuated joints depending on if they are being used for control -->
  <xacro:if value="$(arg actuate_reflex)">
    <xacro:property name="joint_type" value="revolute"/>
  </xacro:if>
  <xacro:unless value="$(arg actuate_reflex)">
    <xacro:property name="joint_type" value="fixed"/>
  </xacro:unless>

  <xacro:property name="pi" value="3.14159265359" />
  <xacro:property name="mesh_path" value="package://description/meshes/reflex"/>

  <xacro:include filename="$(find description)/urdf/xacro_macros/inertia_tensors.xacro"/>

  <!-- ===================================== MATERIALS ======================================= -->
  <!-- Gazebo won't be able to read these colors but they are required RViz 
  see this issue https://robotics.stackexchange.com/questions/20506/gazebo-not-reading-the-material-color-in-urdf -->

  <material name="black">
    <color rgba="0 0 0 0"/>
  </material>

  <material name="dark_grey">
    <color rgba="0.2 0.2 0.2 1"/>
  </material>

  <material name="gold">
    <color rgba="${254/255} ${216/255} ${93/255} 1"/>
  </material>

  <!-- ======================================= Masses ======================================== -->
  <!-- These are rough approximations, the total hand mass was measured to be about 0.9kg     -->
  <!-- final mass: 0.6+0.03+2*0.02+3*(0.025+0.015+0.02+0.02+0.01) = 0.94 -->

  <xacro:property name="shell_mass" value="0.6"/>
  <xacro:property name="pad_mass" value="0.03"/>
  <!-- these links occur twice -->
  <xacro:property name="swivel_link_mass" value="0.02"/>
  <!-- these links occur three times (once on each finger) -->
  <xacro:property name="proximal_link_mass" value="0.025"/>
  <xacro:property name="proximal_pad_mass" value="0.015"/>
  <xacro:property name="flex_link_mass" value="0.02"/>
  <xacro:property name="distal_link_mass" value="0.02"/>
  <xacro:property name="distal_pad_mass" value="0.01"/>

  <!-- ====================================== Link Macros ==================================== -->

  <xacro:property name="flex_link_box_x" value="0.017"/>
  <xacro:property name="flex_link_box_y" value="0.014"/>
  <xacro:property name="flex_link_box_z" value="0.0065"/>

  <xacro:macro name="flex_link" params="finger_id">
    <link name="finger_${finger_id}_flex_link">
      <visual>
        <origin xyz="${flex_link_box_x/2} 0 ${flex_link_box_z/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${flex_link_box_x} ${flex_link_box_y} ${flex_link_box_z}"/>
        </geometry>
        <material name="gold"/>
      </visual>
      <inertial>
        <origin xyz="${flex_link_box_x/2} 0 ${flex_link_box_z/2}" rpy="0 0 0"/>
        <mass value="${flex_link_mass}"/>
        <xacro:cuboid_inertia m="${flex_link_mass}" x="${flex_link_box_x}" y="${flex_link_box_y}" z="${flex_link_box_z}"/>
      </inertial>
      <collision>
        <origin xyz="${flex_link_box_x/2} 0 ${flex_link_box_z/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${flex_link_box_x} ${flex_link_box_y} ${flex_link_box_z}"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <!-- approx length, height and width of a cuboid surrounding the link -->
  <xacro:property name="proximal_link_box_x" value="0.071"/>
  <xacro:property name="proximal_link_box_y" value="0.014"/>
  <xacro:property name="proximal_link_box_z" value="0.012"/>

  <xacro:macro name="proximal_link" params="finger_id">
    <link name="proximal_${finger_id}">
      <visual>
        <origin xyz="-0.011 0.007 0.011" rpy="${pi} 0 0"/>
        <geometry>
          <mesh filename="${mesh_path}/proximal.STL"/>
        </geometry>
        <material name="black"/>
      </visual>
      <inertial>
        <origin xyz="${proximal_link_box_x/2-0.011} 0 0" rpy="0 0 0"/>
        <mass value="${proximal_link_mass}"/>
        <xacro:cuboid_inertia m="${proximal_link_mass}" x="${proximal_link_box_x}" y="${proximal_link_box_y}" z="${proximal_link_box_z}"/>
      </inertial>
      <collision>
        <origin xyz="-0.011 0.007 0.011" rpy="${pi} 0 0"/>
        <geometry>
          <mesh filename="${mesh_path}/proximal_coll.STL"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <!-- approx length, height and width of a cuboid surrounding the link -->
  <xacro:property name="distal_link_box_x" value="0.036"/>
  <xacro:property name="distal_link_box_y" value="${proximal_link_box_y}"/>
  <xacro:property name="distal_link_box_z" value="0.012"/>

  <xacro:macro name="distal_link" params="finger_id">
    <link name="distal_${finger_id}">
      <visual>
        <origin xyz="${-0.077-flex_link_box_x/2} 0.007 ${0.007+flex_link_box_z/2+0.004+flex_z_offset}" rpy="${pi} 0 0"/>
        <geometry>
          <mesh filename="${mesh_path}/distal.STL"/>
        </geometry>
        <material name="black"/>
      </visual>
      <inertial>
        <origin xyz="${distal_link_box_x/2} 0 ${distal_link_box_z/2-0.002}" rpy="0 0 0"/>
        <mass value="${distal_link_mass}"/>
        <xacro:cuboid_inertia m="${distal_link_mass}" x="${distal_link_box_x}" y="${distal_link_box_y}" z="${distal_link_box_z}"/>
      </inertial>
      <collision>
        <origin xyz="${-0.077-flex_link_box_x/2} 0.007 ${0.007+flex_link_box_z/2}" rpy="${pi} 0 0"/>
        <geometry>
          <mesh filename="${mesh_path}/distal_coll.STL"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <xacro:property name="proximal_pad_box_x" value="0.016"/>
  <xacro:property name="proximal_pad_box_y" value="0.020"/>
  <xacro:property name="proximal_pad_box_z" value="0.05"/>

  <xacro:macro name="proximal_pad" params="finger_id">
    <link name="proximal_${finger_id}_pad">
      <visual>
        <origin xyz="-0.008 0.014 -0.002" rpy="${pi/2} ${pi/2} 0" />
        <geometry>
          <mesh filename="${mesh_path}/proximal_pad.STL"/>
        </geometry>
        <material name="dark_grey"/>
      </visual>
      <inertial>
        <origin xyz="0 0.004 -0.035" rpy="0 0 0"/>
        <mass value="${proximal_pad_mass}"/>
        <xacro:cuboid_inertia m="${proximal_pad_mass}" x="${proximal_pad_box_x}" y="${proximal_pad_box_y}" z="${proximal_pad_box_z}"/>
      </inertial>
      <collision>
        <origin xyz="-0.008 0.014 -0.002" rpy="${pi/2} ${pi/2} 0"/>
        <geometry>
          <mesh filename="${mesh_path}/proximal_pad_coll.STL"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <xacro:property name="distal_pad_box_x" value="${proximal_pad_box_x}"/>
  <xacro:property name="distal_pad_box_y" value="0.018"/>
  <xacro:property name="distal_pad_box_z" value="0.037"/>

  <xacro:macro name="distal_pad" params="finger_id">
    <link name="distal_${finger_id}_pad">
      <visual>
        <!-- setting these xyz values by eye as transformations get too complex -->
        <origin xyz="-0.008 0.0155 0.076" rpy="${pi/2} ${pi/2} 0"/>
        <geometry>
          <mesh filename="${mesh_path}/distal_pad.STL"/>
        </geometry>
        <material name="dark_grey"/>
      </visual>
      <inertial>
        <origin xyz="0 ${distal_pad_box_y/2-0.002} ${-distal_pad_box_z/2+0.0005}" rpy="0 0 0"/>
        <mass value="${distal_pad_mass}"/>
        <xacro:cuboid_inertia m="${distal_pad_mass}" x="${distal_pad_box_x}" y="${distal_pad_box_y}" z="${distal_pad_box_z}"/>
      </inertial>
      <collision>
        <origin xyz="-0.009 0.0155 0.076" rpy="${pi/2} ${pi/2} 0"/>
        <geometry>
          <mesh filename="${mesh_path}/distal_pad_coll.STL"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <!-- approx length, height and width of a cuboid surrounding the link -->
  <xacro:property name="swivel_box_x" value="0.03"/>
  <xacro:property name="swivel_box_y" value="0.03"/>
  <xacro:property name="swivel_box_z" value="0.015"/>

  <xacro:macro name="swivel_link" params="finger_id">
    <link name="swivel_${finger_id}">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${mesh_path}/swivel_${finger_id}.STL"/>
        </geometry>
        <material name="black"/>
      </visual>
      <inertial>
        <origin xyz="0 0 ${swivel_box_z/2}" rpy="0 0 0"/>
        <mass value="${swivel_link_mass}"/>
        <xacro:cuboid_inertia m="${swivel_link_mass}" x="${swivel_box_x}" y="${swivel_box_y}" z="${swivel_box_z}"/>
      </inertial>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${mesh_path}/swivel_${finger_id}_coll.STL"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <!-- approx length, height and width of a cuboid surrounding the link -->
  <xacro:property name="shell_box_x" value="0.13"/>
  <xacro:property name="shell_box_y" value="0.09"/>
  <xacro:property name="shell_box_z" value="0.07"/>
  <xacro:property name="shell_x_offset" value="0.01"/>

  <xacro:macro name="shell_link">
    <link name="shell">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${mesh_path}/base_link.STL"/>
        </geometry>
        <material name="black"/>
      </visual>
      <inertial>
        <origin xyz="${shell_x_offset} 0 ${shell_box_z/2}" rpy="0 0 0"/>
        <mass value="${shell_mass}"/>
        <xacro:cuboid_inertia m="${shell_mass}" x="${shell_box_x}" y="${shell_box_y}" z="${shell_box_z}"/>
      </inertial>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${mesh_path}/base_link_coll.STL"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <!-- y, z measurements we take from the shell -->
  <xacro:property name="pad_box_y" value="0.022"/>

  <xacro:macro name="pad_link">
    <link name="pad">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${mesh_path}/pad.STL"/>
        </geometry>
        <material name="dark_grey"/>
      </visual>
      <inertial>
        <origin xyz="0 ${pad_box_y/2} ${shell_x_offset}" rpy="0 0 0"/>
        <mass value="${pad_mass}"/>
        <xacro:cuboid_inertia m="${pad_mass}" x="${shell_box_y}" y="${pad_box_y}" z="${shell_box_x}"/>
      </inertial>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${mesh_path}/pad_coll.STL"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <!-- =================================== Tactile macros =================================== -->
  <!-- Sensor links are rendered only to give a link that the Gazebo sensor plugin can latch  -->
  <!-- onto. As such, the collision and inertia are bogus and the visual is defines an        -->
  <!-- approximation of the sensor size. It's important that the mass and inertia are low     -->
  <!-- enough not to interfere with the hand dynamics, but not so small that they physics     -->
  <!-- engine chokes on it (e.g. 1e-8 is too small and the links disappear).                  -->

  <xacro:macro name="sensor_link" params="location finger_id sensor_id">
    <link name="${location}_${finger_id}_sensor_${sensor_id}">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.006 0.006 0.0003"/>
        </geometry>
      </visual>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="1e-5"/>
        <xacro:cuboid_inertia m="1e-5" x="0.006" y="0.006" z="0.0003"/>
      </inertial>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.006 0.006 0.0003"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <xacro:macro name="sensor_joint" params="location finger_id sensor_id">
    <joint name="${location}_${finger_id}_to_sensor_${sensor_id}" type="fixed">
      <xacro:if value="${location == 'proximal'}">
        <xacro:property name="x_offset" value="0.012"/>
        <xacro:property name="x_gap" value="0.008"/>
        <xacro:property name="z_offset" value="0.014"/>
      </xacro:if>
      <xacro:if value="${location == 'distal'}">
        <xacro:property name="x_offset" value="-0.001"/>
        <xacro:property name="x_gap" value="0.008"/>
        <xacro:property name="z_offset" value="0.0155"/>
      </xacro:if>
      <origin xyz="${x_offset + x_gap * sensor_id} 0 ${z_offset}" rpy="0 0 0"/>
      <parent link="${location}_${finger_id}"/>
      <child link="${location}_${finger_id}_sensor_${sensor_id}"/>
    </joint>
  </xacro:macro>

  <!-- ===================================== Joint Macros ===================================== -->

  <xacro:macro name="distal_to_pad" params="finger_id">
    <joint name="distal_${finger_id}_to_pad" type="fixed">
      <origin xyz="0 0 0" rpy="${pi/2} 0 -${pi/2}"/>
      <parent link="distal_${finger_id}"/>
      <child link="distal_${finger_id}_pad"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="proximal_to_pad" params="finger_id">
    <joint name="proximal_${finger_id}_to_pad" type="fixed">
      <origin xyz="0 0 0" rpy="${pi/2} 0 -${pi/2}"/>
      <parent link="proximal_${finger_id}"/>
      <child link="proximal_${finger_id}_pad"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="flex_to_distal" params="finger_id">
    <joint name="flex_to_distal_${finger_id}" type="revolute">
      <origin xyz="${flex_link_box_x} 0 0" rpy="0 0 0"/>
      <parent link="finger_${finger_id}_flex_link"/>
      <child link="distal_${finger_id}"/>
      <axis xyz="0 -1 0"/>
      <dynamics damping="0.0001" />
      <!-- TODO might need to tune effort and velocity values -->
      <limit effort="1" lower="0.0" upper="${pi/6}" velocity="0.1"/>
    </joint>
  </xacro:macro>

  <xacro:property name="flex_z_offset" value="-0.002"/>

  <xacro:macro name="proximal_to_flex" params="finger_id">
    <joint name="proximal_${finger_id}_to_flex" type="revolute">
      <origin xyz="${0.0705-flex_link_box_x/2} 0 ${flex_z_offset}" rpy="0 0 0"/>
      <parent link="proximal_${finger_id}"/>
      <child link="finger_${finger_id}_flex_link"/>
      <axis xyz="0 -1 0"/>
      <dynamics damping="0.0001" />
      <!-- TODO might need to tune effort and velocity values -->
      <limit effort="1" lower="0.0" upper="${pi/6}" velocity="0.1"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="shell_to_pad">
    <joint name="shell_to_pad" type="fixed">
      <origin xyz="0.02 0 0.063" rpy="${pi/2} 0 -${pi/2}"/>
      <parent link="shell"/>
      <child link="pad"/>
      <axis xyz="0 0 0"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="preshape" params="finger_id">
    <joint name="preshape_${finger_id}" type="${joint_type}">
      <parent link="shell"/>
      <child link="swivel_${finger_id}"/>
      <dynamics damping="0.1" />
      <limit effort="1" lower="0.0" upper="${pi/2}" velocity="0.1"/>
      <xacro:if value="${finger_id == 1}">
        <origin xyz="0.0503973683071414 -0.026 0.063" rpy="0 0 0"/>
        <axis xyz="0 0 -1"/>
      </xacro:if>
      <xacro:if value="${finger_id == 2}">
        <origin xyz="0.0503973683071413 0.026 0.063" rpy="0 0 0"/>
        <axis xyz="0 0 1"/>
      </xacro:if>
    </joint>
  </xacro:macro>

  <xacro:macro name="proximal" params="finger_id">
    <joint name="proximal_joint_${finger_id}" type="${joint_type}">
      <child link="proximal_${finger_id}"/>
      <axis xyz="0 -1 0"/>
      <dynamics damping="0.1" />
      <limit effort="1" lower="0.0" upper="${pi}" velocity="0.1"/>
      <xacro:if value="${finger_id == 3}">
        <origin xyz="-0.03 0 0.0816" rpy="0 0.28 ${pi}"/>
        <parent link="shell"/>
      </xacro:if>
      <xacro:unless value="${finger_id == 3}">
        <origin xyz="0.01 0 0.0186" rpy="0 0.28 0"/>
        <parent link="swivel_${finger_id}"/>
      </xacro:unless>
    </joint>
  </xacro:macro>

  <xacro:macro name="finger" params="id">
    <xacro:unless value="${id == 3}">
      <xacro:preshape finger_id="${id}"/>
      <xacro:swivel_link finger_id="${id}"/>
    </xacro:unless>
    <xacro:proximal finger_id="${id}"/>
    <xacro:proximal_link finger_id="${id}"/>
    <xacro:proximal_to_pad finger_id="${id}"/>
    <xacro:proximal_pad finger_id="${id}"/>
    <xacro:proximal_to_flex finger_id="${id}"/>
    <xacro:flex_link finger_id="${id}"/>
    <xacro:flex_to_distal finger_id="${id}"/>
    <xacro:distal_link finger_id="${id}"/>
    <xacro:distal_to_pad finger_id="${id}"/>
    <xacro:distal_pad finger_id="${id}"/>

    <xacro:if value="$(arg use_reflex_contact_sensors)">
      <xacro:sensor_link location="proximal" finger_id="${id}" sensor_id="1"/>
      <xacro:sensor_joint location="proximal" finger_id="${id}" sensor_id="1"/>
      <xacro:sensor_link location="proximal" finger_id="${id}" sensor_id="2"/>
      <xacro:sensor_joint location="proximal" finger_id="${id}" sensor_id="2"/>
      <xacro:sensor_link location="proximal" finger_id="${id}" sensor_id="3"/>
      <xacro:sensor_joint location="proximal" finger_id="${id}" sensor_id="3"/>
      <xacro:sensor_link location="proximal" finger_id="${id}" sensor_id="4"/>
      <xacro:sensor_joint location="proximal" finger_id="${id}" sensor_id="4"/>
      <xacro:sensor_link location="proximal" finger_id="${id}" sensor_id="5"/>
      <xacro:sensor_joint location="proximal" finger_id="${id}" sensor_id="5"/>
      <xacro:sensor_link location="distal" finger_id="${id}" sensor_id="1"/>
      <xacro:sensor_joint location="distal" finger_id="${id}" sensor_id="1"/>
      <xacro:sensor_link location="distal" finger_id="${id}" sensor_id="2"/>
      <xacro:sensor_joint location="distal" finger_id="${id}" sensor_id="2"/>
      <xacro:sensor_link location="distal" finger_id="${id}" sensor_id="3"/>
      <xacro:sensor_joint location="distal" finger_id="${id}" sensor_id="3"/>
      <xacro:sensor_link location="distal" finger_id="${id}" sensor_id="4"/>
      <xacro:sensor_joint location="distal" finger_id="${id}" sensor_id="4"/>
    </xacro:if>
  </xacro:macro>


  <!-- =============================================================================== -->

  <!-- The preceding macros are used here to actually construct the kinematic structure-->

  <xacro:shell_link/>
  <xacro:pad_link/>
  <xacro:shell_to_pad/>

  <xacro:finger id="1"/>
  <xacro:finger id="2"/>
  <xacro:finger id="3"/>

</robot>
